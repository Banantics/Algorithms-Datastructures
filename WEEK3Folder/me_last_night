assignment 7 

The time complexity of the list_at function is O(i), where i is the index. For each iteration of the loop list_at() is called creating time complecity.



assignment 8

bool list_remove_last(list_t* list) {
    if (list->head == NULL) {
        return false;
    }

    // If there is only one node in the list
    if (list->head->next == NULL) {
        free(list->head);
        list->head = NULL;
        return true;
    }

    // Traverse the list to find the node before the last node
    Node* current = list->head;
    while (current->next->next != NULL) {
        current = current->next;
    }

    // Remove the last node
    free(current->next);
    current->next = NULL;

    return true;
}
